#!/bin/bash

source `dirname "$(readlink -f "$0")"`/shared_data

#echo "Number of successful or failed builds\n"
#grep EXIT_STATUS tmp/logs/benchmark_run.* | grep -o "[01]$" | sort | uniq -c

#echo "Builds with Exit status 0\n"
#grep EXIT_STATUS tmp/logs/benchmark_run.* | grep "1$" | sort

for machine in $aws_machines
do
  log_file="benchmark_run.$machine.log"
  #printf "%s;" $machine
  for build in $build_types
  do
    machine_build=$machine.$build
    #echo "Statistics for $machine_build ---------------------"
    exit_status_logline=`cat $log_file | grep -E "$machine_build.[0-9]+.*EXIT_STATUS" | sort | uniq`
    cpu_time_logline=`cat $log_file | grep -E "$machine_build.[0-9]+.*CPU_TIME" | sort`
    successful_runs=`echo "$exit_status_logline" | grep "EXIT_STATUS=0"`
    sum_total_runtime=`echo "$exit_status_logline" | grep -Eo "TOTAL_RUNTIME=$number_regex" | grep -Eo "$number_regex" | paste -sd+ - | bc`

    total_runs=`echo "$exit_status_logline" | wc -l`
    successful_runs=`echo "$successful_runs" | wc -l`

    sum_cpu_time="`echo "$cpu_time_logline" | grep -Eo "$number_regex\$" | paste -sd+ - | bc`"
    average_cpu_time=`echo "$sum_cpu_time/$total_runs" | bc -l`
    printf "%.2f;" $average_cpu_time

    average_runtime=`echo "$sum_total_runtime/$total_runs" | bc -l`
    printf "%.2f;" $average_runtime

    printf "%i;" `echo "$total_runs-$successful_runs" | bc`
    #echo "---------------------------------------------------------"
  done
  printf "\n"
done
